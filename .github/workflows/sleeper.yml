name: Sleeper sync (multi-league)

on:
  schedule:
    - cron: "0 * * * *"      # hourly UTC; adjust if you like
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  sync:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        league: ["1265837618587762688","1181689020258160640"]  # non-keeper, keeper
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Export league ${{ matrix.league }}
        env:
          LID: ${{ matrix.league }}
        run: |
          set -euo pipefail
          shopt -s nullglob
          mkdir -p docs
          # Run the exporter (auto-detects season)
          python sleeper_sync.py --league "$LID" --out ./docs
          # Copy to a stable per-league filename
          FILE=$(ls ./docs/league_${LID}_*/league_state.json | head -n 1)
          cp "$FILE" "./docs/league_state_${LID}.json"
          # HTML mirror (handy if a raw link isn't available)
          python - << 'PY'
          import os, pathlib, html
          lid = os.environ["LID"]
          p = pathlib.Path(f'docs/league_state_{lid}.json')
          data = p.read_text(encoding='utf-8')
          html_doc = (
            '<!doctype html><meta charset="utf-8"><title>league_state</title>'
            f'<h1>league_state_{lid}.json (mirror)</h1><pre>' + html.escape(data) + '</pre>'
          )
          pathlib.Path(f'docs/league_state_{lid}.html').write_text(html_doc, encoding='utf-8')
          PY

      - name: Show docs contents
        run: ls -R docs

      - name: Build index.html
        run: |
          python - << 'PY'
          import json, pathlib, html
          docs = pathlib.Path('docs'); docs.mkdir(exist_ok=True)
          rows=[]
          for p in sorted(docs.glob('league_state_*.json')):
            data=json.loads(p.read_text('utf-8'))
            lid=data.get('league',{}).get('league_id')
            name=data.get('league',{}).get('name','League')
            ts=data.get('generated_at','')
            rows.append((name,lid,p.name,f'league_state_{lid}.html',ts))
          out=['<!doctype html>','<meta charset="utf-8">','<title>SleeperAgent export</title>','<h1>SleeperAgent export</h1>','<ul>']
          for name,lid,json_name,html_name,ts in rows:
            out.append(f'<li>{html.escape(name)} (ID {lid}) — updated <code>{html.escape(ts)}</code> — <a href="{json_name}">JSON</a> | <a href="{html_name}">HTML</a></li>')
          out.append('</ul>')
          docs.joinpath('index.html').write_text('\n'.join(out), encoding='utf-8')
          PY

      - name: Commit & push
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "actions@github.com"
          git add -A
          git commit -m "update league data (multi with html mirrors)" || echo "No changes"
          git push
